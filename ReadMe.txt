Динамические структуры

Простейшей структурой данных является массив, Массив - это набор переменных одного типа в неприрывной области памяти. Преимуществом массива является быстрый доступ к элементам, который осущ. за константное время по скольку сводится к операции сложения, а операция сложения всегда осущ. за константное время.
Недостатком массива является сложность добавление/удаление элементов, которая приводить к дополнительым затратам ресурсов памяти и процессорного времени. А так же он зависит от размеры массива. Не прирывная область памяти обуславливает преимущества и не достатки памяти. Не достатки массива устраняют - списки. Список (List) - 
это множество элементов произвольных областях памяти, каждая из которых содержит адрес следующего элемента. 
Главное преимуществом списка перед массивом является быстрое добавление или удаление элементов, которое осущ за константное время. И не зависит от размера списка. Потому что элемент сравнительно небольшего размера можно создать в любов месте памяти - безраспределения списка.Но так же есть и недостатки списки - медленный доступ к элементам, который уже зависит от размера списка. В отличии от массива, который дает произвольный доступ к элементам, список обеспечмвает только последовательный доступ к элементам. Для того чтобы получить доступ к элементам, нужно пройти через все элементы списка от его начала. У любого списка есть голова, котора яхранит адрес начального элемента списка. Последний элемент списка всегда указывает на '0', 
Реализация односвясного списка: данный список реализуется с помощью 2 связок. Класс Element описывает структуры элементов. Любой список состоит как мниимум. Data - и pNext. Данный класс отвечает за добавление, удаление, объекдинение элементов. 


class List
{
}

Шаблоны классов


Шаблонным называется класс - который определяется при создании объекта. Если объект обычного класса Class object;, то шаблонный класс создается так - 
Class<TYPE> object; Где TYPE - определяет какого типа будут поля создаваемом объекте. К шаблонному классу можно обратится следующим образом - Class<T>
T - это имя шаблонного типа. Для того чтобы сделать класс шаблонным перед ним достаточно просто создать шаблон. Шаблоны для классов создаются так же как и шаблоны для функций. После создания шаблона любая переменная член класса может быть шаблонного типа, а все методы объявленны внтури класса автоматически становяться шаблонными.
